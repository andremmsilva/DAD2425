package dadkvs.server;

/* these imported classes are generated by the contract */
import dadkvs.DadkvsConsole;
import dadkvs.DadkvsConsoleServiceGrpc;

import io.grpc.stub.StreamObserver;

public class DadkvsConsoleServiceImpl extends DadkvsConsoleServiceGrpc.DadkvsConsoleServiceImplBase {

	DadkvsServerState server_state;

	public DadkvsConsoleServiceImpl(DadkvsServerState state) {
		this.server_state = state;
	}

	@Override
	public void setleader(DadkvsConsole.SetLeaderRequest request,
			StreamObserver<DadkvsConsole.SetLeaderReply> responseObserver) {
		// for debug purposes
		System.out.println(request);

		boolean response_value = true;
		try {
			this.server_state.leaderLock.lock();
			this.server_state.i_am_leader = request.getIsleader();
			this.server_state.leaderCond.signal();
		} finally {
			this.server_state.leaderLock.unlock();
		}

		// for debug purposes
		System.out.println("I am the leader = " + this.server_state.i_am_leader);

		DadkvsConsole.SetLeaderReply response = DadkvsConsole.SetLeaderReply.newBuilder()
				.setIsleaderack(response_value).build();

		responseObserver.onNext(response);
		responseObserver.onCompleted();
	}

	@Override
	public void setdebug(DadkvsConsole.SetDebugRequest request,
			StreamObserver<DadkvsConsole.SetDebugReply> responseObserver) {
		// for debug purposes
		System.out.println(request);

		boolean response_value = true;

		// If it's a crash debugmode
		if (request.getMode() == 1) {
			server_state.crashServer();
		} else if (request.getMode() == 3 ||
		// On an unfreeze or a slow-mode-off it will just go to normal (0)
				request.getMode() == 5 ||
				request.getMode() == 7) {
			this.server_state.debug_mode = 0;
		} else {
			this.server_state.debug_mode = request.getMode();
		}

		// for debug purposes
		System.out.println("Setting debug mode to = " + this.server_state.debug_mode);

		DadkvsConsole.SetDebugReply response = DadkvsConsole.SetDebugReply.newBuilder()
				.setAck(response_value).build();

		responseObserver.onNext(response);
		responseObserver.onCompleted();
	}
}
